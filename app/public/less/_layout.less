
.screen('default')
{
    html {
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        height: 100%;    
    }

    *,
    *:before,
    *:after {
        /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
        -webkit-box-sizing: inherit;
        -moz-box-sizing: inherit;
        box-sizing: inherit;
    }

    body {
        margin: 0;
        padding: 0;
        min-height: 100%;
        background: #fff;
        overflow-x : hidden;

        &:not(.footer-style-fixed) {
            transition: padding 0.5s ease;
        }

        &.page-template-blank {
            background: white;
        }
    }

    body, .main-wrapper, .torso, .main-container, .main-footer {
        display: flex;
        flex-direction: column;
    }

    .main-wrapper, .main-header, .main-container, .torso, .main {
        width: 100%
    }

    .main-wrapper, .main, .main-footer, .torso, .sidebar {
        position: relative;
    }

    .main-wrapper {
        margin: 0 auto;
        z-index: 2;
    }

    .container {
        display: flex;
        margin: 0 auto;
    }


    .torso {
        overflow: hidden;
        z-index: 2;
        background: white;
    }

    // keeps container from being too short when not a lot of content
    .main-container {
        flex: 100%;
    }

    .main-wrapper, .torso {
        flex: 1;
    }

    .main {
        z-index: 2;
    }

    // classes for fullscreen and wide width elements that are in the container
    // this needs the body to have hidden overflow-x
    .alignfull,  .alignwide {
        margin-left  : ~"calc( -100vw / 2 + 100% / 2 )";
        margin-right : ~"calc( -100vw / 2 + 100% / 2 )";
        max-width    : 100vw;
        width: auto;
        min-width: 100%;
    }  

    
} // end screen


.screen('mobile')
{
    .container:not(.main-container) {
        width: 80%;
    }

    .main, .sidebar {
        padding: 7vw;
    }

}

.screen('mobile-landscape')
{
    .container:not(.main-container) {
        width: 90%;
    }

    .main, .sidebar {
        padding: 5vw;
    }
}

.screen('tablet-and-under')
{
    .main-container {
        width: 100%;
    }

    // if not enough content to fill height, stretch sidebar to fill
    // display sidebar after main content on mobile
    .sidebar {
        flex: 100%;
        // order: 2;
    }
}

.screen('tablet-and-up')
{
    .container {
        width: 90%;
    }

    .main, .sidebar {
        padding: 5vw;
    }
}

.screen('laptop-and-up')
{
    .main-container {
        flex-direction: row;
    }

    .main, .sidebar {
        flex: 0 0 auto;        
    }

    .sidebar {
        width: 30%;

        &--left {
            order: 1;
            border-right: 1px solid rgba(0, 0, 0, 0.05);
        }

        &--right {
            order: 3;
            border-left: 1px solid rgba(0, 0, 0, 0.05);
        }  
    }

    .main--has-sidebar {
        order: 2;
        width: 70%;
    }

    // if fullwidth layout and no sidebar, no side padding 
    .main--layout-full {

        &.main--no-sidebar {
            padding-left: 0;
            padding-right: 0;
        }

        &.main--has-sidebar--left {
            padding-right: 0;
        }

        &.main--has-sidebar--right {
            padding-left: 0;
        }         
    } 


    .sidebar.layout-full {

        &:before {
            content: "";
            position: absolute;
            width: 100vw;
            height: 100%;
            top: 0;
            z-index: -1;
        }


        &.sidebar--left {
            padding-left: 0;

            &:before {
                right: 0;
            }
        }


        &.sidebar--right {
            padding-right: 0;

            &:before {
                left: 0;
            }           
        } 
    }   

    // boxed layout
    .main-container.layout-boxed {
        width: 100%;
    }   

} // end screen
