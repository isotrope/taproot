{"version":3,"sources":["webpack:///webpack/bootstrap e999a493326e7d2f9d7f","webpack:///./resources/js/customize-controls.js","webpack:///./resources/js/customize-controls/Color.js","webpack:///./resources/js/customize-controls/FontStyles.js","webpack:///./resources/js/customize-controls/Range.js"],"names":["Color","hex","parseInt","i","AlphaColor","jQuery","control","self","colorPickerOptions","change","key","value","alpha","$container","$alphaSlider","wp","obj","ui","palettes","palette","startingColor","colorObject","container","alphaVal","$","orientation","create","Math","range","step","min","max","animate","color","e","parseFloat","$control","update_slider","iris","colorPicker","ready","alphaControl","TaprootFontStyles","checkbox","current_value","values","query","result","fontStyles","TaprootRange","stepPlaces","$option","defaultVal","rangeDefault","unitDefault","unit","$rangeInput","timeout","$range","reset","clearTimeout","isNaN"],"mappings":"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","file":"/dist/js/customize-controls.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e999a493326e7d2f9d7f","/**\n * Customize controls script.\n *\n * This file handles the JavaScript for the controls panel in the customizer.\n * Any includes or imports should be handled in this file. The final result gets\n * saved back into `dist/js/customize-controls.js`.\n *\n * @package   Taproot\n * @author    Sky Shabatura <theme@sky.camp>\n * @copyright 2018 Sky Shabatura\n * @license   https://www.gnu.org/licenses/gpl-2.0.html GPL-2.0-or-later\n * @link      https://taproot-theme.com\n */\n\n// Hybrid Customize controls.\n//\n// Uncomment any of the below to import scripts for specific controls if using\n// the `hybrid-customize` add-on.\n\n// import checkboxMultiple from 'hybrid-customize/js/controls/checkbox-multiple.js';\n// import palette          from 'hybrid-customize/js/controls/palette.js';\n// import radioImage       from 'hybrid-customize/js/controls/radio-image.js';\n// import selectGroup      from 'hybrid-customize/js/controls/select-group.js';\n// import selectMultiple   from 'hybrid-customize/js/controls/select-multiple.js';\n\n\n// import rootstrapCustomizeControls from 'rootstrap-customize/js/customize-controls.js';\n\n\nimport './customize-controls/Color.js';\nimport './customize-controls/Range.js';\nimport './customize-controls/FontStyles.js';\n\n\n\n// WEBPACK FOOTER //\n// ./resources/js/customize-controls.js","/**\n * Alpha Color Picker\n *\n * This file handles the JavaScript for the custom color picker control\n * that adds an opacity slider and allows for RGBA color values\n * \n * @package   Taproot\n * @author    Sky Shabatura <theme@sky.camp>\n * @copyright 2018 Sky Shabatura\n * @license   https://www.gnu.org/licenses/gpl-2.0.html GPL-2.0-or-later\n */\n\n\n/**\n * Add support to the stock color.js toString() for RGBa\n */\nColor.prototype.toString = function( flag ) {\n\n\t// If our no-alpha flag has been passed in, output RGBa value with 100% opacity\n\tif ( 'no-alpha' == flag ) {\n\t\treturn this.toCSS( 'rgba', '1' ).replace( /\\s+/g, '' );\n\t}\n\n\t// If we have a proper opacity value, output RGBa\n\tif ( 1 > this._alpha ) {\n\t\treturn this.toCSS( 'rgba', this._alpha ).replace( /\\s+/g, '' );\n\t}\n\n\t// Proceed with stock color.js hex output\n\tvar hex = parseInt( this._color, 10 ).toString( 16 );\n\tif ( this.error ) { return ''; }\n\tif ( hex.length < 6 ) {\n\t\tfor ( var i = 6 - hex.length - 1; i >= 0; i-- ) {\n\t\t\thex = '0' + hex;\n\t\t}\n\t}\n\n\treturn '#' + hex;\n};\n\n\n/**\n * Alpha Color Picker Class\n */\nclass AlphaColor {\n\n    constructor( control ) {\n\n        if( !control ) return false;\n\n        // Set up our attributes\n        this.control        = jQuery(control.selector).find('.alpha-color-control');\n\t\tthis.startingColor  = this.control.val().replace( /\\s+/g, '' );\n\t\tthis.defaultColor   = this.control.attr( 'data-default-color' );\n\t\tthis.paletteInput   = this.control.attr( 'data-palette' );\n        this.palette        = this.paletteSettings();\n\t\tthis.hideAlpha      = ( this.control.attr( 'data-hide-alpha' ) && 'false' !== this.control.attr( 'data-hide-alpha' ) ) ? true : false;\n\n        // Initialize control\n        this.setupControl();\n\n        // Initialize alpha slider\n        this.addAlpha();\n\n        // Set up event handlers\n        this.handlers();  \n    }\n\n\n    /**\n     * Get palette settings\n     */  \n    paletteSettings() {\n\n\t\tif ( this.paletteInput.indexOf( '|' ) !== -1 ) {\n\t\t\treturn this.paletteInput.split( '|' );\n        } \n        else if ( 'false' == this.paletteInput ) {\n\t\t\treturn false;\n        } \n        else {\n\t\t\treturn true;\n        }          \n    }\n\n\n    /**\n     * Get control container\n     */  \n    getContainer() {\n        return this.control.parents( '.wp-picker-container:first' );\n    }\n\n\n    /**\n     * Setup color picker control\n     */  \n    setupControl() {\n\n        const self = this;\n\n\t\tconst colorPickerOptions = {\n\t\t\tchange: function( e, ui ) {                \n\t\t\t\tvar key, value, alpha;\n\t\t\t\tkey = self.control.attr( 'data-customize-setting-link' );\n\t\t\t\tvalue = self.control.wpColorPicker( 'color' );\n\n\t\t\t\t// Update slider handle when the default button is clicked\n\t\t\t\tif ( self.defaultColor == value ) {\n                    \n                    alpha = self.getAlpha( value );\n                    \n                    const $container = self.getContainer();\n                    const $alphaSlider = $container.find( '.alpha-slider' );\n\n\t\t\t\t\t$alphaSlider.find( '.ui-slider-handle' ).text( alpha );\n\t\t\t\t}\n\n\t\t\t\t// Send ajax request to wp.customize to trigger the Save action\n\t\t\t\twp.customize( key, function( obj ) {\n\t\t\t\t\tobj.set( value );\n\t\t\t\t});\n\n\t\t\t\t// Set the background color of the opacity slider with 100% opacity\n\t\t\t\tself.getContainer().find( '.transparency' ).css( 'background-color', ui.color.toString( 'no-alpha' ) );\n\t\t\t},\n\t\t\tpalettes: self.palette\n\t\t};\n\n\t\t// Create the colorpicker\n\t\tthis.control.wpColorPicker( colorPickerOptions );\n    }\n\n\n    /**\n     * Setup alpha slider control\n     */  \n    addAlpha() {\n\n        if( this.hideAlpha ) return false;\n        const startingColor = this.startingColor;\n        const colorObject = new Color(startingColor);\n        const container = this.getContainer();\n        const alphaVal = this.getAlpha( startingColor ) / 100;\n\n        // Insert our opacity slider\n        $( '<div class=\"alpha-color-picker-wrapper\">' +\n                '<div class=\"alpha-slider\"></div>' +\n                '<div class=\"transparency\"></div>' +\n            '</div>' ).appendTo( container.find( '.iris-picker-inner' ) );\n        \n        // Create alpha slider using jquery ui\n        container.find( '.alpha-slider' ).slider({\n            orientation: \"vertical\",\n            create: function() {\n                var value = $( this ).slider( 'value' );\n                $( this ).find( '.ui-slider-handle' ).text( Math.round(value * 100) );\n                $( this ).siblings( '.transparency ').css( 'background-color', colorObject.toString( 'no-alpha' ) );\n            },\n            value: alphaVal,\n            range: 'max',\n            step: 0.01,\n            min: 0,\n            max: 1,\n            animate: 300\t\t\t\t\n        });\n    }\n\n\n    /**\n     * Setup color picker event handlers\n     */    \n    handlers() {\n        \n        const $container = this.getContainer();\n        const $alphaSlider = $container.find( '.alpha-slider' );\n\n\t\t// Bind event handler for clicking on a palette color\n\t\t$container.find( '.iris-palette' ).on( 'click', (e) => {\n\n\t\t\tvar color = $( e.target ).css( 'background-color' );\n\t\t\tconst alpha = this.getAlpha( color );\n\n\t\t\tthis.updateAlphaSlider( alpha, $alphaSlider );\n\n\t\t\t// Round the opacity value on RGBa colors and save to the color picker object\n\t\t\tif ( alpha != 100 ) {\n\t\t\t\tcolor = color.replace( /[^,]+(?=\\))/, ( alpha / 100 ).toFixed( 2 ) );\n\t\t\t}\n\n\t\t\tthis.control.wpColorPicker( 'color', color );\n\t\t});\n\n\n\t\t// Bind event handler for clicking the 'clear' button\n\t\t$container.find( '.button.wp-picker-clear' ).on( 'click', () => {\n\t\t\tconst key = this.control.attr( 'data-customize-setting-link' );\n\n\t\t\t// Set the color picker to white\n\t\t\tthis.control.wpColorPicker( 'color', '#ffffff' );\n\n\t\t\t// Set the actual option value to empty string\n\t\t\twp.customize( key, function( obj ) {\n\t\t\t\tobj.set('');\n\t\t\t});\n\n\t\t\tthis.updateAlphaSlider( 100, $alphaSlider );\n\t\t});\n\n\n\t\t// Bind event handler for clicking on the 'Default' button\n\t\t$container.find( '.button.wp-picker-default' ).on( 'click', () => {\n\t\t\tconst alpha = this.getAlpha( this.defaultColor );\n\t\t\tthis.updateAlphaSlider( alpha, $alphaSlider );\n\t\t});\n\n\n\t\t// Bind event handler for typing or pasting into the input\n\t\tthis.control.on( 'input', (e) => {\n\t\t\tconst value = $( e.target ).val();\n\t\t\tconst alpha = this.getAlpha( value );\n\t\t\tthis.updateAlphaSlider( alpha, $alphaSlider );\n\t\t});\n\n\n\t\t// Update all the things when the slider is interacted with\n\t\t$alphaSlider.slider().on( 'slide', ( event, ui ) => {\n            const alpha = parseFloat( ui.value );\n            const $alphaSlider = $container.find( '.alpha-slider' );\n\t\t\tthis.updateControl( alpha, this.control, $alphaSlider, false );\n\t\t\t$alphaSlider.find( '.ui-slider-handle' ).text( Math.round( ui.value * 100 ) );\n\t\t});\n    }\n\n    \n    /**\n     * Get alpha value from RGBa, RGB, or hex colors\n     */\n    getAlpha( value ) {\n\n        var alphaVal;\n\n        // Remove all spaces from the passed in value to help our RGBa regex\n        value = value.replace( / /g, '' );\n\n        if ( value.match( /rgba\\(\\d+\\,\\d+\\,\\d+\\,([^\\)]+)\\)/ ) ) {\n            alphaVal = parseFloat( value.match( /rgba\\(\\d+\\,\\d+\\,\\d+\\,([^\\)]+)\\)/ )[1] ).toFixed(2) * 100;\n            alphaVal = parseInt( alphaVal );\n        } \n        else {\n            alphaVal = 100;\n        }\n\n        return alphaVal;\n    }\n\n    /**\n     * Update the color picker object and maybe the alpha slider\n     */\n    updateControl( alpha, $control, $alphaSlider, update_slider ) {\n\n        const iris = $control.data( 'a8cIris' );\n        const colorPicker = $control.data( 'wpWpColorPicker' );\n\n        // Set the alpha value on the Iris object\n        iris._color._alpha = alpha;\n\n        // Store the new color value\n        const color = iris._color.toString();\n\n        // Set the value of the input\n        $control.val( color );\n\n        // Update the background color of the color picker\n        colorPicker.toggler.css({\n            'background-color': color\n        });\n\n        // Maybe update the alpha slider\n        if ( update_slider ) {\n            this.updateAlphaSlider( alpha, $alphaSlider );\n        }\n\n        // Update the color picker object\n        $control.wpColorPicker( 'color', color );\n    }\n\n    /**\n     * Update the slider handle position and label\n     */\n    updateAlphaSlider( alpha, $alphaSlider ) {\n        $alphaSlider.slider( 'value', alpha );\n        $alphaSlider.find( '.ui-slider-handle' ).text( alpha.toString() );\n    }\n}\n\n/**\n * Initiate Alpha Color \n */\nwp.customize.controlConstructor['alpha-color'] = wp.customize.Control.extend( {\n\tready: function() {\n        let alphaControl = new AlphaColor( this );\n\t}\n});\n\n\n\n// WEBPACK FOOTER //\n// ./resources/js/customize-controls/Color.js","/**\n * Font Styles Control\n *\n * This file handles the JavaScript for the custom font styles control\n * \n * @package   Taproot\n * @author    Sky Shabatura <theme@sky.camp>\n * @copyright 2018 Sky Shabatura\n * @license   https://www.gnu.org/licenses/gpl-2.0.html GPL-2.0-or-later\n */\n\n    \nclass TaprootFontStyles {\n\n    // initiate control\n    constructor( control ) {\n\n        if( !control ) return false;\n\n        // Set up our attributes\n        $control = jQuery(control.selector);\n        this.$fontStyles =  $control.find('.taproot-font-styles--item');\n        this.$checkboxes = $control.find('.taproot-font-style-checkbox');\n        this.$input = $control.find('.taproot-font-styles-input');\n        this.$reset = $control.find('.taproot-control-reset');\n\n        // Set up event handlers\n        this.handlers();  \n    }\n\n    // add handlers\n    handlers() {\n\n        const self = this;\n\n        self.$fontStyles.click( function() {\n\n            var checkbox = $( this ).find( 'input' );\n\n            $( this ).toggleClass( 'taproot-font-style-checked' );\n\n            if( checkbox.is( ':checked' ) ) {\n                checkbox.prop( 'checked', false );\n            } \n            else {\n                checkbox.prop( 'checked', true );\n\n                if( checkbox.val() == 'uppercase' ) {\n                    $( this ).siblings('.taproot-font-styles--capitalize').removeClass('taproot-font-style-checked').find('input').prop( 'checked', false ).change();\n                } \n                else if( checkbox.val() == 'capitalize' ) {\n                    $( this ).siblings('.taproot-font-styles--uppercase').removeClass('taproot-font-style-checked').find('input').prop( 'checked', false ).change();\n                }\n            }\n\n            checkbox.change();\n        }); \n\n        self.$checkboxes.on('change', function() {\n\n            var current_value = self.$input.val(),\n                value         = $(this).val(),\n                values        = ( current_value != 'false' ) ? current_value.split( '|' ) : [],\n                query         = $.inArray( value, values ),\n                result        = '';\n\n            if( $(this).prop('checked' ) == true ) {\n                if( current_value.length ) {\n                    if( query < 0 ) {\n                        values.push( value );\n                        result = values.join( '|' );\n                    }\n                } else {\n                    result = value;\n                }\n            } else {\n                if( current_value.length ) {\n                    if( query >= 0 ) {\n                        values.splice( query, 1 );\n                        result = values.join( '|' );\n                    } else {\n                        result = current_value;\n                    }\n                }\n            }\n\n            self.$input.val( result ).change();\n        });\n\n\n        self.$reset.click( () => {\n            self.$input.val('').change();\n            self.$checkboxes.removeAttr( 'checked' );\n            self.$fontStyles.removeClass( 'taproot-font-style-checked' );\n        });        \n       \n    }\n}\n\n\n/**\n * Initiate Control\n */\nwp.customize.controlConstructor['taproot-font-styles'] = wp.customize.Control.extend( {\n\tready: function() {\n        let fontStyles = new TaprootFontStyles( this );\n\t}\n});\n\n\n\n// WEBPACK FOOTER //\n// ./resources/js/customize-controls/FontStyles.js","/**\n * Range with Unit Selector\n *\n * This file handles the JavaScript for the custom range control\n * \n * @package   Taproot\n * @author    Sky Shabatura <theme@sky.camp>\n * @copyright 2018 Sky Shabatura\n * @license   https://www.gnu.org/licenses/gpl-2.0.html GPL-2.0-or-later\n */\n\n\nclass TaprootRange {\n\n    constructor( control ) {\n\n        if( !control ) return false;\n\n        // Set up our attributes\n        $control = jQuery(control.selector);\n        this.$range = $control.find('.taproot-range');\n        this.$rangeInput = $control.find('.taproot-range-input');\n        this.$unit = $control.find('.taproot-unit');        \n        this.$reset = $control.find('.taproot-reset-slider');\n        this.$value = $control.find('.taproot-range-value');\n        this.$enable = $control.find( '.taproot-range-enable' );\n        this.$disable = $control.find( '.taproot-range-disable' );\n\n        // Set up event handlers\n        this.handlers();  \n    }\n\n\n    // event handlers for our control\n    handlers() {\n\n        const self = this;\n\n        self.$range.on( 'mousedown', function() {\n\n            var stepPlaces = self.decimalPlaces( $( this ).attr('step') );\n\n            // not sure if this is necessary. \n            // self.$rangeInput.val( parseFloat( $( this ).attr( 'value' ) ).toFixed(stepPlaces) );\n\n            // using 'input' instead of 'mousemove' prevents \n            // the value changing after releasing control\n            // Are there other repercussions to this?\n            $( this ).on('input', function() {\n                // check range step attribute, and adjust input \n                // to display using appropriate number of decimal places\n                self.$rangeInput.val( parseFloat( $( this ).attr( 'value' ) ).toFixed(stepPlaces) );\n                self.updateValue();        \n            });\n\n        });\n    \n\n        self.$rangeInput.on( 'change keyup', function() {\n            self.adjustRangeValue( $(this), 1000 );\n            self.updateValue(); \n        }).on( 'focusout', function() {\n            self.adjustRangeValue( $(this), 0 );\n            self.updateValue();   \n        });\n    \n    \n        self.$reset.click( function () {\n            self.reset();   \n        });\n\n        self.$enable.on( 'change', function() {\n            self.reset();   \n        });\n    \n        self.$unit.on( 'change', function() {\n            const value = $(this).val();\n            const $option = $(this).find('option[value=\"' + value + '\"]');\n            const defaultVal   = parseFloat( $option.attr('default') );\n    \n            self.$range.attr('min',  parseFloat( $option.attr('min')  ));\n            self.$range.attr('max',  parseFloat( $option.attr('max')  ));\n            self.$range.attr('step', parseFloat( $option.attr('step') ));\n            self.$range.val( defaultVal );\n\n            self.$rangeInput.attr('min',  parseFloat( $option.attr('min')  ));\n            self.$rangeInput.attr('max',  parseFloat( $option.attr('max')  ));\n            self.$rangeInput.attr('step', parseFloat( $option.attr('step') ));            \n            self.$rangeInput.val( defaultVal );\n            self.updateValue();        \n        });\n\n        self.$disable.on( 'click',  function () {     \n            self.$enable.prop('checked', false).change();\n            self.$value.val('').change();\n        });        \n\n    }\n\n\n    // get number of decimal places\n    decimalPlaces( value ) {\n        if(Math.floor(value) == value) return 0;\n        return value.toString().split(\".\")[1].length || 0; \n    }\n\n\n    // reset the values to default\n    reset() {\n        const rangeDefault = this.$range.data( 'reset_value' );\n        const unitDefault = this.$unit.data( 'reset_value' );\n        this.$unit.val( unitDefault ).change();        \n        this.$range.val( rangeDefault ).change();\n        this.$rangeInput.val( rangeDefault ).change();\n\n        this.updateValue();   \n    }\n\n\n    // update the hidden control that stores the value\n    updateValue() {\n        const unit = ( 'unitless' === this.$unit.val() ) ? '' : this.$unit.val();\n        this.$value.val( this.$range.val() + unit ).change();\n    }\n\n\n    // handle range adjustments\n    adjustRangeValue( $rangeInput, timeout ) {\n        const $range  = $rangeInput.parent().find('.taproot-range');\n        var   value   = parseFloat( $rangeInput.val() );\n        const reset   = parseFloat( $range.attr('data-reset_value') );\n        const step    = parseFloat( $rangeInput.attr('step') );\n        const min     = parseFloat( $rangeInput.attr('min') );\n        const max     = parseFloat( $rangeInput.attr('max') );\n\n        clearTimeout( this.rangeTimeout );\n\n        this.rangeTimeout = setTimeout( function() {\n            if( isNaN( value ) ) {\n                $rangeInput.val( reset );\n                $range.val( reset ).change();\n                return;\n            }\n\n            if( step >= 1 && value % 1 !== 0 ) {\n                value = Math.round( value );\n                $rangeInput.val( value );\n                $range.val( value ).change();\n            }\n\n            if( value > max ) {\n                $rangeInput.val( max );\n                $range.val( max ).change();\n            }\n\n            if( value < min ) {\n                $rangeInput.val( min );\n                $range.val( min ).change();\n            }\n        }, timeout );\n\n        $range.val( value ).change();\n    }\n}\n\n\n/**\n * Initiate Range\n */\nwp.customize.controlConstructor['taproot-range'] = wp.customize.Control.extend( {\n\tready: function() {\n        let range = new TaprootRange( this );\n\t}\n});\n\n\n\n\n// WEBPACK FOOTER //\n// ./resources/js/customize-controls/Range.js"],"sourceRoot":""}